name: 🚀 Deploy Expertly Website

on:
  push:
    branches:
      - main        # Production deployment
      - staging     # Staging deployment
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: 🌍 Deploy to AWS S3
    runs-on: ubuntu-latest
    
    steps:
      # ===============================
      # CHECKOUT CODE
      # ===============================
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      # ===============================
      # CONFIGURE AWS CREDENTIALS
      # ===============================
      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ===============================
      # PRODUCTION DEPLOYMENT
      # ===============================
      - name: 🚀 Deploy to Production S3
        if: github.ref == 'refs/heads/main'
        run: |
          echo "🌍 Deploying to Production: expertly.co.in"
          aws s3 sync src/ s3://${{ secrets.S3_PRODUCTION_BUCKET }} \
            --delete \
            --exact-timestamps \
            --cache-control "max-age=86400" \
            --exclude "*.DS_Store" \
            --exclude "*.git*"
          echo "✅ Production deployment completed"

      # ===============================
      # STAGING DEPLOYMENT
      # ===============================
      - name: 🧪 Deploy to Staging S3
        if: github.ref == 'refs/heads/staging'
        run: |
          echo "🧪 Deploying to Staging: awsstgqa.expertly.co.in"
          aws s3 sync src/ s3://${{ secrets.S3_STAGING_BUCKET }} \
            --delete \
            --exact-timestamps \
            --cache-control "max-age=3600" \
            --exclude "*.DS_Store" \
            --exclude "*.git*"
          echo "✅ Staging deployment completed"

      # ===============================
      # CLOUDFRONT CACHE INVALIDATION
      # ===============================
      - name: ⚡ Invalidate CloudFront Cache
        if: github.ref == 'refs/heads/main'
        run: |
          echo "⚡ Clearing CloudFront cache for instant updates"
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
          echo "✅ Cache invalidation initiated"

      # ===============================
      # DEPLOYMENT SUMMARY
      # ===============================
      - name: 📊 Deployment Summary
        run: |
          echo "================================================"
          echo "🎉 EXPERTLY WEBSITE DEPLOYMENT COMPLETED"
          echo "================================================"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "🌍 Environment: PRODUCTION"
            echo "🔗 URL: https://expertly.co.in"
            echo "📦 S3 Bucket: ${{ secrets.S3_PRODUCTION_BUCKET }}"
            echo "⚡ CloudFront: Cache invalidated"
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            echo "🧪 Environment: STAGING"
            echo "🔗 URL: https://awsstgqa.expertly.co.in"
            echo "📦 S3 Bucket: ${{ secrets.S3_STAGING_BUCKET }}"
          fi
          echo "================================================"
          echo "✅ Deployment successful at $(date)"
          echo "🚀 Your fintech cybersecurity website is live!"

  # ===============================
  # VALIDATION JOB
  # ===============================
  validate:
    name: 🔍 Validate Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 🔍 Validate Production Website
        run: |
          echo "🔍 Validating website accessibility..."
          
          # Wait for deployment to propagate
          sleep 30
          
          # Check if website is accessible
          if curl -f -s -o /dev/null https://expertly.co.in; then
            echo "✅ Website is accessible at https://expertly.co.in"
            echo "🎉 Validation successful!"
          else
            echo "❌ Website validation failed"
            exit 1
          fi

      - name: 📈 Performance Check
        run: |
          echo "📈 Running basic performance check..."
          response_time=$(curl -o /dev/null -s -w "%{time_total}" https://expertly.co.in)
          echo "⏱️  Response time: ${response_time}s"
          
          if (( $(echo "$response_time < 3.0" | bc -l) )); then
            echo "✅ Performance check passed (< 3s)"
          else
            echo "⚠️  Warning: Response time is slower than expected"
          fi
